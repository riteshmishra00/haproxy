########## GLOBAL ###################


global
        log 127.0.0.1 local0
        log 127.0.0.1 local2 info 
        chroot /var/lib/haproxy
       
        log 127.0.0.1 local0 notice
        log 127.0.0.1 local1
        
        user haproxy
        group haproxy
        daemon
        node eMudhra_Load-Balancer
        spread-checks 5     # 5%
        #stats show-desc
        # uncomment this to get debug output
        #debug
        #quiet

# This section is fixed and just sets some default values.
# These values can be overridden by more-specific redefinitions 
# later in the config

########## DEFAULTS ###################

defaults
        log     global
        mode    http
        option  dontlognull
        option  allbackups
        maxconn 100000
        retries 3
        option redispatch
        retries                 3
        timeout http-request    20
        timeout queue           86400
        timeout connect         86400
        timeout client          86400
        timeout server          86400
        timeout http-keep-alive 30
        timeout check           20

# Enable admin/stats interface
# go to http://lb1.example.com:8000/stats to access it
listen admin_stats *:80
       mode http
       stats hide-version
       stats uri /stats
       stats refresh 5s
       stats realm HAProxy\ Global\ stats
       stats auth root:roota@123             # CHANGE THIS TO A SECURE PASSWORD
       stats show-node


# A single frontend section is needed. This listens on 127.0.0.1:8080, and 
# receives the requests from Apache.


#############################################################################



########## FRONTENDS ###################


########## HTTP ###################
frontend web-http
  bind 0.0.0.0:80 
  mode http
  http-request set-log-level silent 
  redirect scheme https code 301 if !{ ssl_fc }
  default_backend example.com
##### HTTPS #####

frontend web-https
  bind 0.0.0.0:443 ssl crt /etc/ssl/private/loadbalancer.pem
  mode http
  default_backend eMudhra.com
  http-request set-log-level silent
  redirect scheme https code 301 if !{ ssl_fc }

#####acl host_sub hdr(host) -i sub.mydomain.com####
  
  acl host_sub1 hdr(host) -i sub1.example.com
  acl host_sub2 hdr(host) -i sub2.example.com
  acl host_sub3 hdr(host) -i sub3.example.com
  acl host_sub..n hdr(host) -i sub..n.example.com
  
  
  
  
  use_backend sub1.example.com if sub1
  use_backend sub2.example.com if sub2
  use_backend sub3.example.com if sub3
  use_backend sub..n.example.com  if sub..n
  default_backend example.com 


########## BACKENDS ###################



backend example.com
  mode http
  option httplog
  option httpclose
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  option ssl-hello-chk
  balance roundrobin
  stick-table type ip size 200k expire 30m
  stick on src
  cookie SRVID insert indirect nocache
  option nolinger
  

  option httpchk GET / HTTP/1.0

  server server1 0.0.0.0:8080 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3
  server server2 0.0.0.0:80 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3 backup



backend sub1.example.com
  mode http
  option httplog
  option httpclose
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }

  balance roundrobin

  cookie SRVID insert indirect nocache
  option nolinger 

  
  

  option httpchk GET / HTTP/1.0

 server server1 0.0.0.0:8080 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3
 server server2 0.0.0.0:80 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3 backup



backend sub2.example.com
  mode http
  option httplog
  option httpclose
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  stick-table type ip size 200k expire 30m
  stick on src
  balance roundrobin

  cookie SRVID insert indirect nocache
  option nolinger 

  

  option httpchk GET / HTTP/1.0

server server1 0.0.0.0:8080 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3
server server2 0.0.0.0:80 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3 backup








backend sub3.example.com
  mode http
  option httplog
  option httpclose
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  stick-table type ip size 200k expire 30m
  stick on src
  balance roundrobin

  cookie SRVID insert indirect nocache
  option nolinger 

  

  option httpchk GET / HTTP/1.0

  server server1 0.0.0.0:8080 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3
  server server2 0.0.0.0:80 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3 backup




backend sub..n.example.com
  mode http
  option httplog
  option httpclose
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  stick-table type ip size 200k expire 30m
  stick on src
  balance roundrobin

  cookie SRVID insert indirect nocache
  option nolinger 

  

  option httpchk GET / HTTP/1.0

  server server1 0.0.0.0:8080 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3
  server server2 0.0.0.0:80 cookie server2 weight 1 maxconn 10000 check inter 5s rise 2 fall 3 backup






# these are the error pages returned by HAProxy when an error occurs
# customize as needed
#        errorfile       400     /etc/haproxy/errors/400.http
#        errorfile       403     /etc/haproxy/errors/403.http
#        errorfile       408     /etc/haproxy/errors/408.http
#        errorfile       500     /etc/haproxy/errors/500.http
#        errorfile       502     /etc/haproxy/errors/502.http
#        errorfile       503     /etc/haproxy/errors/503.http
#        errorfile       504     /etc/haproxy/errors/504.http
